diff --git a/conn/winrio/rio_windows.go b/conn/winrio/rio_windows.go
index d1037bb..4e6a4fb 100644
--- a/conn/winrio/rio_windows.go
+++ b/conn/winrio/rio_windows.go
@@ -121,6 +121,14 @@ func Initialize() bool {
 			return
 		}
 
+		// fix windows udp reset
+		ret := uint32(0)
+		flag := uint32(0)
+		size := uint32(unsafe.Sizeof(flag))
+		windows.WSAIoctl(socket, syscall.SIO_UDP_CONNRESET, (*byte)(unsafe.Pointer(&flag)), size, nil, 0, &ret, nil, 0)
+		// SIO_UDP_NETRESET
+		windows.WSAIoctl(socket, syscall.SIO_UDP_CONNRESET+3, (*byte)(unsafe.Pointer(&flag)), size, nil, 0, &ret, nil, 0)
+
 		// While we should be able to stop here, after getting the function pointers, some anti-virus actually causes
 		// failures in RIOCreateRequestQueue, so keep going to be certain this is supported.
 		var iocp windows.Handle
diff --git a/device/receive.go b/device/receive.go
index af2db44..4ade897 100644
--- a/device/receive.go
+++ b/device/receive.go
@@ -10,6 +10,7 @@ import (
 	"encoding/binary"
 	"errors"
 	"net"
+	"strings"
 	"sync"
 	"time"
 
@@ -115,6 +116,12 @@ func (device *Device) RoutineReceiveIncoming(maxBatchSize int, recv conn.Receive
 			}
 			device.log.Verbosef("Failed to receive %s packet: %v", recvName, err)
 			if neterr, ok := err.(net.Error); ok && !neterr.Temporary() {
+				if syserr, ok := neterr.(*net.OpError); ok {
+					if strings.Contains(syserr.Err.Error(), "keep-alive activity") {
+						device.log.Verbosef("WSAENETRESET ignored")
+						continue
+					}
+				}
 				return
 			}
 			if deathSpiral < 10 {
